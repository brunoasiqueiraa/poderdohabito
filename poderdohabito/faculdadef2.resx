<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBxQTEhQTExMWFhUXGBcYFxgYGBkYFRcVGBgXGBgcGhoY
        HCggGhwlHBgXIjEhJSorLi4uFx8zODMsNygtLiv/2wBDAQoKCg4NDhsQEBs0JCAkLS8sLzQ3NywsNzQs
        LCwsLCwsLC8sLCwsLywsLDQsLCw0LCwsLCwsLCwsLCwsLCwsLCz/wAARCADIAPwDASIAAhEBAxEB/8QA
        HAABAAIDAQEBAAAAAAAAAAAAAAQFAgMGAQcI/8QAORAAAQMCBAMGBAUDBAMAAAAAAQACEQMhBBIxQQVR
        YQYicYGRoRMyQrHB0eHw8RQjUgdicpIVgqL/xAAaAQEAAwEBAQAAAAAAAAAAAAAAAQIDBAUG/8QALhEA
        AgEDAwIEBQUBAQAAAAAAAAECAwQREiExQVEFImGBExQycZEVsdHh8KFS/9oADAMBAAIRAxEAPwD7iiIg
        CIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIi
        AIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiFAEUatj6bdXDyv9lCrcab9IJ6nRZyqwjy
        y6pyfQtlprYpjdXDw3VBiMdUcJLoHIfpdR6VObysJXP/AJRrGh3Za4jjY+hvmfyUY8Rqn6o8AFoYwLW9
        5DtBl956LB1ZvlmypxXQknFOi7z6p/Uv/wAneqiug2IWxkclTXLuW0o3f1tUfV6rNvEau5+yi1XDQyvW
        iLX+6n4ku5GmPYlN4pU6HyW1vGjuzzCgVKZ5rEdR+Kn4011I+HF9C5pcapnWQt9LiNN31AeNlzrmj+Vj
        UY3kQtFdTRR0InWNqtOhB81muRqU7ax7LD+trM+RxInSZ+60V2uqKO37M7FFy9HjtUDvBp8iPZTqPH2x
        3gc3TRaK5pvqUdGaLpFX0OL03b5fH9FOY8G4IPgtYzjLhlHFrkyREVioREQBERAERVuJ4lBIaAY3PPey
        pOpGCyy0YOXBYVHgCSYCgVeLMHygu9gqbEY173hrg68wR8oHj1/BKFMAmfK5P8Lllct/SdEaCXJMq8Xq
        H5QB++qivNR/zON+qzrQ2HEwB6eqwq1BGoaCDBn89FhKcnyzaMEuEeNw40N/NZNYOUKM8OjK0zOj5E6j
        WBHRbMJgwzcuJ3JuPSwCpktg3tdP7KxY0nWwWTjAM268lHwsSYc5x84ClsjBi74kxLdTEgxHUxZa8K+t
        MVGtv5iyltN+8dP3ogF+ZjTdQSZOAgW/JeOytGoEoW2v+Vx4KPUdTe4NcQS2CLEmfJRKSissYJEm4tHP
        VZHx1+60uqggmCeixdXOSQzMeVlOoYMHyBAzHW+48ei9NYtGhceg5qBxV+JLAKAaSbGXAEW6+i87P/1U
        RicoAkWOZ0+Vh6qmd9i2nbJZsItIIPXZaMU54gtZI3W7E1W6RcdJWrhuJFQvvMOy3sJGseCt6FTbQrB4
        n1Cxi4sY25I19NhyjWZgXMlbgAOXWNU5BDrUiXjutLdyTcX5L1zXAxAjnN581sqUyZgm+jpFh0WRMC9/
        uowDSaQmZ9LI2q4fK5w9lkSeQWWUCXHkgJdLitXnPkrnh2N+IL2P38FzDq140t7Kd2e71QmdATHst6Ne
        WtRzkzq0lpb4OlREXpHCEREB4VyTaoDjJ3+665cNjXHM8CSVw3uyTOy0Wcot2EbG/wBl4+YjWY6rnqeJ
        c1wmTO0WmVIHF2sdlcQeUacxv+yCuNVVwzrdF9C6DJImY5WLZ/lZPpg2kEctVX0OL0yLy2TAJsCToBdT
        WvBmD4mFqpRfBi4tcnuSCIkDceS1vbIN45nfpaFi4unuuaY2MiFHxFbKRLCSf8ZgHxUNkpZJDw36nHTQ
        m3os6bhAA0PK1lEe9znC8Wki8xO3dUiowgzJDbWiSfDdQn2BiMS0WzSToBqSsS7vS2AdxYu9vwXtSnLS
        AQJ02jqd5VdwzhHwXvqOqZ8ws2IymZtfw9FVt5xjYlYwWL60NJcQANS6wjczss6VSfDyv4XUPEVjEfCB
        GkOgTzIBUvC6DQQLAfL6qyZDRrr1QLvMN25ypE2ify81pxGHLgJcRzIAPsfJasPVb8pcXu3tqJ3GyjLT
        AY4NBgAXNuahYjibZA7wPQK0OHbqQI5a/jZa8Mym2cjWDnAEn8UwMmdBriO+B0EX8yvKZvBBHlb15raa
        nKPwWtxcd/8Arr6lWINGOw2cQ15aPqIAn12sttNsBrRyiTqYCyYwgDLpN81yefmmQg6gDlsox1Jz0NUu
        B2I6bdOqUsPE6mTvstjok+vgFrOIPM/iqOSRZRbNgDdzCgYXE/EGYWadN7aArCuC6b2OvhuAs6LIIAsI
        AjYQstbkzXSooyrjX09Fe9mKXcc7mQB5fyo9DgTnQXuAG4FzC6CjSDWhrRAGi77ahJT1y2OKvWTjpRmi
        IvQOMIiIAuM4thS2tUmcpIIPMELs1D4lhWvYZsQCQeSwuKXxI/Y3oVdEvufPqr9PIG8GB6yVU1w403uc
        O+1wgTMkc4N5B21BKuK+HN50B1tbltpqovEMP3GXu1zXlxtAHzWnTLmsfFeM+D247MreJZjSqZZBNNxa
        WyL5SWkHxhWWAxz2Na7P9IkG+YmIM+E+oUXFNJkC+sbW8T+7rHJlp0rg/wBtlxoe6FOC3Kwy7odpgLOH
        Ii1iI253lWlDjNNw1IHPYfgNQuKrgGOk++vr+S20sM5wLAS3OIBH0m1/WDrup1zXDM5UKb9DusPi6b9H
        g26T0Wx8EGCL+K+Z4LFuwxOFeW52uOdwGoGUC8ctr6q+p8TIADQe7JAiJ5zyVnWfVGMrbD2ZeDhAL5cX
        AcmOJH/0J91MNL6cpho1mJ85XMntC8Q0MJeTYFzb+mi34PtKHMzPhhktINriZjWbx6qqq016EOhV5Lyk
        8HRskdZ1H+Tlm2ptEga8geWlyqalx6m4wIi8mbey30+MUhAO+14/ZVlWh3KOjNdCe7vSDadBpP2Wqphi
        CILwNw3KAfEm8ea0jjVMWg85FwIPObHos/8Ay9OYP3nUTeNFOuD6kaJroZOojaRzEguPWYKzdRJvPgJs
        Odt1q/8AKsDZaJjYQ3x9FIoPaTmgTrmPLX0RTg9kQ4SXJrxtcMo1HEwGtLpAm+jY53+6r8PxBxY0z3j8
        zbS0bTz5+ay7SVQ3DkT8zmtHUDvT7KowdbuwInSfLp4rOdR5NYU/Lkv2Y503ErKtWJDp1cAD+n59FFBl
        o2Mfu63VaggCCTaIE8vJZ6pdycLsbCe6D0PL7LW1y8wrXZiDeTJVJ2j44KAimM9U2A1a3q4j7Ia0qU6s
        9EFllhjsc2k3M7yG56ALR2V42+vi6Ya2KcuDgbkjKYJO0cvG64in8Wq7NUcZPMzHgNl9A/0+wTWVM0y4
        jU222HqtbdZqRw+p6N1Z07a2m57ywfQ0XgK9XvHx4REQBEWFaplaXHYE+iA0Y7EBrSJ7x0G/8KqxNd3w
        3lzpgQPE2+0rX8YuJcdSsuMYRzsPDPm+aOf7C46kspy9DvpU4xlFPucgcURMFR8bi+67vTmAzAyQY5A6
        EiRO8qNWeRM6qsxddeK6x9bTtlNljjOKUovLSbaEwNiC29h0my20A00qYa7M1oygg2OW34LlcRUlR6GM
        qU3SxxA3abtPiNFpCeSanha0+R4Z19Wntabx/K9pOyC8g90kiNCSCRNrQLRuqFnasfLVpnqWHps0xv1W
        7DdqKDgRUD28rAg9baXWjycE7OtFbxIGJqZ6tUPMvD3d8kjOTBaTEGYhWnD3uBcTZpjVwcbC/l4rzEYV
        r5LmiTYkAA266rQ7DuaG/CgDNJzFxJsbAjQb6T1VVuYSiYYisXOluduUZhYy28l073Oy0cQqkBoeHTLp
        JLc02tAtGhsrLGAhxMHmR7jXpCrawDgQZJ26c/w3VcZ3LppPJHohpB7zmum0m9hZe1XEGCSTz2k+y9oY
        YRYjzBH2Uh2Hc3UgxuBpPPefMypljqE30ZuwddxtPIR00lTKDZcBcaC0HQ35beKgYZkOFjfXux77fwr/
        AAWB7rXEXMWOgnlzKwazshKWN2W9WiGhrmjMSb6m0TpaT+qniH0wybOjfbaI0VS6oB8NpcDDjbmC0sIt
        EQHSrOtUZQpmo9wGUd1tg420A3dstVvsl9zicW2ur6FT2yxrAaNIPHxBctm8G2YiOnuVowtKWiIzcvDW
        0TuPZc9VZ/U1Hvq0u8TZwJgN+kX6LNnCsjsw+IDyDz+yFMo6j1oWKUVFyw/96nYUsQGtl7g0Ddxj0nyU
        TF9qcPSYXZi8zADBEnqTbzHMKidTdOUjKbSBrzm3NdZ2d4VSc0hzGut9QzXtzUQWXgzq21GjDXPL+2xw
        1XtlXeXfDilmmSLujkCdN7gDVRKJsvqw7IYQmf6dnkI+y3M7KYRulBvufuVrK3lLg2p+MWlJYhBr8fvk
        +b8PpyQAJPIXK6PBtfSLjUBaIBA0Pj0Xb4TA06YhjGt8AAsOK8JbiGZHSDsR9jzCtG3lFZTy+h5134qq
        2Y6dig4HxwskMbmLo7zjuPuul4NjXOcQ8yTcchGwH70XF53U3uphhYWkiTcnlG0Ky4diHU3NMk7zsOh6
        XXFZ3VSNSMG+Hx/ufc+ejFzex3SLwL1fUlAovET/AG3jctI9VvrMlpGkhcdjKzwSCTOi4b26+CsY5JWz
        yTcHfL1hXjwuf4U8hzAeY+66QtU0pa4Jo660k2mil4nwOlWu5sH/ACFj+q5rHdh5+R/qu6cEAWNS2pze
        6Oihf16K8kj5fV7CV9sp6SoT/wDT7FHemPPRfXytDyqfJwjw3/vY7V47den4PkVT/TSvqatP0cteC/0+
        c2oPjPa5n+2ZnbVfVqjgVFqslS6SxsVfjFzLZv8A4irp9nKbKWRjQLajVczW4a9pIMnl+wu9OKAZG65z
        iGNue6VjWhHKaOejXqZedzjOI1KlIEmkXN/yaYj/AJCCfPTwUKhxKm/Y6XFvzXV4vHhozPdTpjm4gfci
        Vw3GeNYOSWB76nOkzKw+OaJ8lEaMnwepTuaDWKscPuv4/guqXEabLhhJ6x+qyf2ipiZpOjYSD99FzmG4
        tTeN2nk4R76KRUpyqOGnlHZToW9Tfn3LNnaCgTJY5sdA6brZi+2VwKVJuVuhqSTPgCudqYZazhyoSidk
        bG3b3Lep2qxLjOcMEg5WNDdP90F3utlHima7gS7cuM35ybk3VL8AheUqsFHutjsha0EvLFI6ejjHbGyl
        tr8yfVUxrZGyolHEufUAALiToFz+d9SrpQw3wjqqdYE6yV2PY7vExtquYpcNp06Lq1UumQIabSdtDKl4
        DtDQYO6xw8D+qW1RNqTeEeDd1oXFJqjl9Mn0UMWYpriB2tA0z+s/dZHtlUHysLuWYAe4IXoO7oR6ngTo
        Tjy0vc7cMWxoXIcP7bzarQI6sOb2MK+wvaDDv0qZTycC37randUJcSX7HI2aO0GCBLam4sfwVPRp5qjW
        63APquoxpa6k64iDcXjqqXs3Ql4d5+P7lcdeC+bhpX1c+3JNOWh5OpREXvGIVJxPAzUzAWNz4q7WvENl
        pCwuKKqww+m4KUhocwfVmbAGuo9ldOCoW0Mrs+8j7z+Cv1y2rbUkyyexpyr11kfVAsFy3aPtT8GWUmfE
        qaf7Gnqdz0C0qVYU1mTNEs8nQ1q4FyQBzNlT47jDREEAbl0j0bEn2XzvHcUxTznql56AQB4AaLSzGzkd
        VpucHuytbOUwIzPcb2uABvfkvPnfZ+hHUvl4fXPP2/s7XEdqaQsJcelgo9btIAb03jzVDhB8ak5wpsp9
        8inlmcrbd5xMkm5m2ygO7O1HEwXkm5IJ9yFzfqFRya1Yx6F1XtukG/c6UdpaW7X/AHWrE8coOFw4+X6r
        iKmCr0nw99T/ALGI9VOw+Bq1oALgBYu0lXleTSzqWCrvLVP6H+SfiMdhsxIoyeZyqo4ji6Rs2iAem/sr
        zHYKjgqXxarHV6xH9uiJI8XTtzJt0JUTslxGricRNfCsolrHFpbItaRf92UO4quOvley/sv+pUY/TDf7
        nK1aT3GG0nT/AMT+Szx3A6zaeeBNiGNlzomCbWHgvqFegJhoBC006zWDM4QBtuTyCzd3PK4/cxl4tUzs
        kj4/hKFZ3e+IGNkjvuIuNbG6k0a9S7XGmTPzBxdbwB/LVd52jwvxsuZoc2cwJgjQgQIsLlRcNw5jjEQ2
        3dFm26BWd7Fxy0Vfi9fPllgruFYEPb3zc+Stz2cw1Jud4LjqG5tfIbLHifwcO+kxxINSYI+VsEDvXsJI
        UvHU2imXOIc5gIbleLzo0jx/FcM6k5NNNpMp+qXSyviP8kim2hi6Ia5o/tkOAbYRpttotOCwVKkQWsAJ
        O3LmVA4O74OZzQQSIA6HY7KThuIlr/7lOGne5IOx6jos5wksxi3g53d1Zx0OTx2zsXeOoh9LKdC8HzDX
        fmouEwYYYgeKncHMh094E2OxiZN1nij0AXM3JRwRGTa5NIYwGzBfUwt9DDhzD3fC2yj4duYgHT8FJkky
        fIbAdFZV3HknCImI4a4XjujfcLHDU3HYEDmrQ1ARlMlXPD8I0sAhdVtbxuZ6YvoRgicCoEmCI8F1GFwT
        KfyjaFpwGEDNApy+lsLJUILVuychERegQEREBExeGnRaGV8rIcbi3WNlZLRWoArKVPrElPBy3FeIvMhg
        LQQRP1eXJcZxU1o/tODHDctBnoTEjyX0uvwwFVWL4FOy8+pZ6papbssp7nx3D8Zr4aqG1JcHSXNdJHiD
        turTinaFoZmbTJd8rQ6wBMzcefsuvx/Zw/4yudx3ZwwRlMctlzVLWOpSlE64ulU+pGXCu0IZSZ/baZ3m
        S2bnu6Hxlb8LximKzKr6hdBi4IgO7otEACQVz1Xhz2CMptvuQoVd0hweCGnVYu3g32Ol2tKS2PoeOqN+
        IC5mb99Vubi7fK0dGz+a4zhvE3NDJJyi2Ux5XOngrerUcdzB8gB4DXzXm1reUH5jzq1vKm8rdFJ2gxtW
        vic2dzWsIDQCQLa23kz6q54fiCxzXuaHCCHWgkEQotTCZDJuD9X5qzoUJarVZpxSOTS8ks8TpN7wc6/0
        gGfy91qxmLp1GB7Ta/zWIPIrleL8Za05aUEzBcdLf481K7P4cVmOkguEX3g3R27jT1PKRpKhJQ1NFoA0
        7zvbRHY2nT1M9AJKxwrHNqhjuUDy0UHiVMfFJ3sqqkpcs5eCH2honEVWVBJY1oaAdQTd0jbYeSsMJw9r
        SXHx8luwlEBpMaepkqU0EiLQVM6r0qC4WwUcvLI3xg7RtlYYbDZqT4lzy0w11u8NB4LW3AuGyl4IFrlz
        TmseU2gvNuiF2e4+0sax4cHt7uaJaQTqeRvfwV1xClYEGfeQtLOCyZDYkz6qzw3CXQBJjkvTdjKedK5O
        ielvK2IFCmWscTqRA89faVtbSJbG+yuqXBTuptPgot0R+FVdKSXXJXoUPCcA9zgCLBdlh6AAXtDDBq3r
        27CxjbR7tkHgC9RF6ACIiAIiIAiIgPC1Ymms0QEaphwVAxPDAdlcLwhQ4pg5DGcAadlznE+yLXAwCOoX
        1A0wtbsMDssZW8WaRqyjwz4vW7IuaIDnRyIkLzD4OtRaAQajQbgWPlOq+xv4e07LQ/hDD9K552UZLBr8
        zJrEtz5lXr0sgzOLbixa6fOAqvjnFwymaeHJcXWLocMo5CRcnnsvrb+BM5KPU7OMOwXLHwmEXnkzUop5
        wfn12CqkthhMTtzsun7E0qlOufiNytcyP/ax/NfVD2YbyWTey7dVrWtZTg4otOs5JrucnxOhmAcDdpsR
        47qjxdB5dJHlsvp7+zwIhQa3ZYncLy5eH3EeEcrhk4nBm2WNR9oVphaFrLoqXZQak+itsLwdrNgoh4RV
        m/NsSo4KnDcPlokbKVS4Q2QYV2ygAtraa9mPh1BYbim11LEOjgwNlKZSA2W2F7C71FIHgC9RFICIiAIi
        IAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAi
        IgCIiAIiIAiIgCIiAIiIAiIgCIiAIiIAiIgCIiAIiID/2Q==
</value>
  </data>
</root>