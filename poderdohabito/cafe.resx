<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>